--- configure.bak	2017-10-21 16:01:07.000000000 +0200
+++ configure	2020-08-29 00:02:33.187500000 +0200
@@ -4081,7 +4081,7 @@
                 # http://www.mingw.org
 		shared=false
      	        CFLAGS="$CFLAGS -DCST_NO_SOCKETS -DUNDER_WINDOWS -DWIN32 -shared"
-                MINGWPREF="i386-mingw32-"
+                MINGWPREF="${host_alias}-"
                 CC="${MINGWPREF}gcc"
                 RANLIB="${MINGWPREF}ranlib"
                 AR="${MINGWPREF}ar"
--- main/Makefile.bak	2017-10-21 16:01:07.000000000 +0200
+++ main/Makefile	2020-08-29 00:30:25.812500000 +0200
@@ -132,13 +132,6 @@
 	$(CC) $(CFLAGS) -o $@ flite_main.o flite_voice_list.o flite_lang_list.o $(flite_LIBS_flags) $(LDFLAGS)
 
 install:
-#       The basic binaries
-	@ $(INSTALL) -m 755 $(BINDIR)/flite $(DESTDIR)$(INSTALLBINDIR)
-	@ for i in $(VOICES) ; \
-	do \
-	   $(INSTALL) $(BINDIR)/flite_$$i $(DESTDIR)$(INSTALLBINDIR); \
-	done
-	$(INSTALL) -m 755 $(BINDIR)/flite_time $(DESTDIR)$(INSTALLBINDIR)
 #       The libraries: static and shared (if built)
 	cp -pd $(flite_LIBS_deps) $(DESTDIR)$(INSTALLLIBDIR)
 ifdef SHFLAGS
--- include/cst_file.h.bak	2017-10-21 16:01:07.000000000 +0200
+++ include/cst_file.h	2020-08-29 00:06:35.390625000 +0200
@@ -99,6 +99,8 @@
 int cst_fprintf(cst_file fh, const char *fmt, ...);
 int cst_sprintf(char *s, const char *fmt, ...);
 #ifdef _WIN32
+#include <windows.h>
+#ifndef __MINGW64_VERSION_MAJOR
 #define snprintf c99_snprintf
 
 __inline int c99_vsnprintf(char* str, size_t size, const char* format,
@@ -121,6 +123,7 @@
        return count;
    }
 #endif
+#endif
 #define cst_snprintf snprintf
 
 #if defined(__palmos__)
--- lang/cmu_indic_lang/cmu_indic_lang.h.bak	2017-10-21 16:01:07.000000000 +0200
+++ lang/cmu_indic_lang/cmu_indic_lang.h	2020-08-29 00:08:14.812500000 +0200
@@ -57,5 +57,11 @@
 } /* extern "C" */
 #endif /* __cplusplus */
 
+#ifdef _WIN32
+__inline int ts_utf8_sequence_length(char c0);
+#else
+int ts_utf8_sequence_length(char c0);
+#endif
+
 #endif
 
--- lang/cmu_indic_lang/cmu_indic_lang.c.bak	2017-12-14 17:55:12.000000000 +0100
+++ lang/cmu_indic_lang/cmu_indic_lang.c	2020-08-29 00:22:34.156250000 +0200
@@ -115,23 +115,16 @@
 #include "indic_tam_num_table.h"
 #include "indic_pan_num_table.h"
 
-
-int ts_utf8_sequence_length(char c0);
-// inline int utf8_sequence_length(char c0)
-// {
-    // Get the expected length of UTF8 sequence given its most
-    // significant byte
-//    return (( 0xE5000000 >> (( c0 >> 3 ) & 0x1E )) & 3 ) + 1;
-// }
-
-
+#ifdef _WIN32
+__inline int ts_utf8_sequence_length(char c0)
+{
+  /* Get the expected length of UTF8 sequence given its most */
+  /* significant byte */
+  return (( 0xE5000000 >> (( c0 >> 3 ) & 0x1E )) & 3 ) + 1;
+}
+#else
 int ts_utf8_sequence_length(char c0);
-// inline int utf8_sequence_length(char c0)
-// {
-    // Get the expected length of UTF8 sequence given its most
-    // significant byte
-//    return (( 0xE5000000 >> (( c0 >> 3 ) & 0x1E )) & 3 ) + 1;
-// }
+#endif
 
 int indic_digit_to_offset(const char *ind_digit) 
 {
